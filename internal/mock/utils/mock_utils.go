// Code generated by MockGen. DO NOT EDIT.
// Source: transaction_hash.go

// Package mock_utils is a generated GoMock package.
package mock_utils

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxHash is a mock of TxHash interface.
type MockTxHash struct {
	ctrl     *gomock.Controller
	recorder *MockTxHashMockRecorder
}

// MockTxHashMockRecorder is the mock recorder for MockTxHash.
type MockTxHashMockRecorder struct {
	mock *MockTxHash
}

// NewMockTxHash creates a new mock instance.
func NewMockTxHash(ctrl *gomock.Controller) *MockTxHash {
	mock := &MockTxHash{ctrl: ctrl}
	mock.recorder = &MockTxHashMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxHash) EXPECT() *MockTxHashMockRecorder {
	return m.recorder
}

// Bytes mocks base method.
func (m *MockTxHash) Bytes() []byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Bytes")
	ret0, _ := ret[0].([]byte)
	return ret0
}

// Bytes indicates an expected call of Bytes.
func (mr *MockTxHashMockRecorder) Bytes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Bytes", reflect.TypeOf((*MockTxHash)(nil).Bytes))
}

// Network mocks base method.
func (m *MockTxHash) Network() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Network")
	ret0, _ := ret[0].(string)
	return ret0
}

// Network indicates an expected call of Network.
func (mr *MockTxHashMockRecorder) Network() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Network", reflect.TypeOf((*MockTxHash)(nil).Network))
}

// String mocks base method.
func (m *MockTxHash) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *MockTxHashMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockTxHash)(nil).String))
}

// Validate mocks base method.
func (m *MockTxHash) Validate() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate")
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate.
func (mr *MockTxHashMockRecorder) Validate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockTxHash)(nil).Validate))
}
